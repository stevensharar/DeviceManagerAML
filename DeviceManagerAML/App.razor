@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager navigation

<CascadingAuthenticationState>
     
 <Router AppAssembly="@typeof(Program).Assembly">
     <Found Context="routeData">
         <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
             <Authorizing>
                 <p>Loading...</p>
             </Authorizing>
             <NotAuthorized>
                 <p>You're not authorized to reach this page. You need to log in.</p>
             </NotAuthorized>
         </AuthorizeRouteView>
     </Found>
     <NotFound>        
         <p>Sorry, there's nothing at this address.</p>        
     </NotFound>
 </Router>
 </CascadingAuthenticationState>

 @code {

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (!user.Identity.IsAuthenticated)
        {
            navigation.NavigateTo("/authentication/login");
        }
    }

 }   
